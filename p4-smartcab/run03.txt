(myenv) Philips-Air:p4-smartcab pgura$ python smartcab/agent.py
2016-02-18 09:45:42.491 python[86023:3874952] 09:45:42.490 WARNING:  140: This application, or a library it uses, is using the deprecated Carbon Component Manager for hosting Audio Units. Support for this will be removed in a future release. Also, this makes the host incompatible with version 3 audio units. Please transition to the API's in AudioComponent.h.
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (8, 6), destination = (3, 2), deadline = 45
RoutePlanner.route_to(): destination = (3, 2)
LearningAgent.update(): deadline = 45, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 44, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 43, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 42, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 41, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 0.5
LearningAgent.update(): deadline = 40, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 39, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 0.5
LearningAgent.update(): deadline = 38, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 37, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 36, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 35, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 34, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 33, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 0.5
LearningAgent.update(): deadline = 32, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 31, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = -1
LearningAgent.update(): deadline = 30, inputs = [('light', 'red'), ('oncoming', 'left'), ('right', None), ('left', None)], action = left, reward = -1
LearningAgent.update(): deadline = 29, inputs = [('light', 'green'), ('oncoming', 'left'), ('right', None), ('left', None)], action = forward, reward = 2
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 28, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 12
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (3, 6), destination = (6, 1), deadline = 40
RoutePlanner.route_to(): destination = (6, 1)
LearningAgent.update(): deadline = 40, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 39, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 38, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 37, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 36, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 35, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 2
LearningAgent.update(): deadline = 34, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 33, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 32, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 31, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 0.5
LearningAgent.update(): deadline = 30, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 29, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 28, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 0.5
LearningAgent.update(): deadline = 27, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 26, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 25, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 2
LearningAgent.update(): deadline = 24, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 23, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 22, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 21, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 20, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 0.5
LearningAgent.update(): deadline = 19, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 18, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 17, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 16, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 15, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 12
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (2, 2), destination = (5, 6), deadline = 35
RoutePlanner.route_to(): destination = (5, 6)
LearningAgent.update(): deadline = 35, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 34, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 33, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', 'left')], action = forward, reward = -1
LearningAgent.update(): deadline = 32, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', 'left')], action = left, reward = 0.5
LearningAgent.update(): deadline = 31, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 30, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 29, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 28, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 27, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 0.5
LearningAgent.update(): deadline = 26, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 25, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 0.5
LearningAgent.update(): deadline = 24, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 23, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 12
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (6, 1), destination = (1, 6), deadline = 50
RoutePlanner.route_to(): destination = (1, 6)
LearningAgent.update(): deadline = 50, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 49, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = -1
LearningAgent.update(): deadline = 48, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 47, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = -1
LearningAgent.update(): deadline = 46, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 0.5
LearningAgent.update(): deadline = 45, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 44, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = -1
LearningAgent.update(): deadline = 43, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 42, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 41, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 40, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 39, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 2
LearningAgent.update(): deadline = 38, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 37, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 36, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 35, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 34, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 33, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
LearningAgent.update(): deadline = 20, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 19, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 18, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 17, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 16, inputs = [('light', 'green'), ('oncoming', 'left'), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 15, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 14, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 13, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 12, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (3, 4), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
LearningAgent.update(): deadline = 40, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 39, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 38, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 37, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 36, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 35, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 34, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 33, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 32, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 31, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 0.5
LearningAgent.update(): deadline = 30, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 29, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 28, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 2
LearningAgent.update(): deadline = 27, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 26, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 25, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 2
LearningAgent.update(): deadline = 24, inputs = [('light', 'red'), ('oncoming', 'left'), ('right', None), ('left', None)], action = right, reward = 0.5
LearningAgent.update(): deadline = 23, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 22, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 21, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 20, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 19, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 18, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 17, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 16, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 15, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 14, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 13, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = -1
LearningAgent.update(): deadline = 12, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 11, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 10, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 9, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 8, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 7, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 6, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 0.5
LearningAgent.update(): deadline = 5, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 4, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 3, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 2, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 2
LearningAgent.update(): deadline = 1, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 0, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
Environment.reset(): Primary agent could not reach destination within deadline!
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
LearningAgent.update(): deadline = 25, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 24, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 23, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 22, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 21, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 20, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 19, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 18, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 17, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 16, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 15, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 2
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 14, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (4, 2), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
LearningAgent.update(): deadline = 25, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 24, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 23, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 22, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 21, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 12
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (8, 4), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
LearningAgent.update(): deadline = 25, inputs = [('light', 'green'), ('oncoming', 'right'), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 24, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 23, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 22, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 21, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 20, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 19, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
LearningAgent.update(): deadline = 35, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 34, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 33, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = -1
LearningAgent.update(): deadline = 32, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 31, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 30, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 29, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 28, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 27, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 26, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 2
LearningAgent.update(): deadline = 25, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 24, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 23, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 22, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 21, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 20, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (2, 2), destination = (7, 1), deadline = 30
RoutePlanner.route_to(): destination = (7, 1)
LearningAgent.update(): deadline = 30, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 29, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 28, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 27, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 26, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 25, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 24, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 23, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 22, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 21, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 20, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 19, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 12
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (5, 2), destination = (6, 6), deadline = 25
RoutePlanner.route_to(): destination = (6, 6)
LearningAgent.update(): deadline = 25, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 2
LearningAgent.update(): deadline = 24, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 23, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 22, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 21, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 20, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 19, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 18, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (3, 1), destination = (7, 3), deadline = 30
RoutePlanner.route_to(): destination = (7, 3)
LearningAgent.update(): deadline = 30, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 2
LearningAgent.update(): deadline = 29, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 28, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 27, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 26, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 25, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 24, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 23, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 22, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 21, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 20, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 19, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 5), deadline = 30
RoutePlanner.route_to(): destination = (2, 5)
LearningAgent.update(): deadline = 30, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 29, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 28, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 27, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 26, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 25, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', 'left')], action = left, reward = 0.5
LearningAgent.update(): deadline = 24, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 23, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 22, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 2
LearningAgent.update(): deadline = 21, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 20, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 19, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 18, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (2, 1), destination = (6, 6), deadline = 45
RoutePlanner.route_to(): destination = (6, 6)
LearningAgent.update(): deadline = 45, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 2
LearningAgent.update(): deadline = 44, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 43, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 42, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 41, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 40, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 39, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = -1
LearningAgent.update(): deadline = 38, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 37, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 36, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 35, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 34, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 33, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 32, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 31, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 30, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 29, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 28, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 27, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 26, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 25, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (5, 6), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
LearningAgent.update(): deadline = 20, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 19, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 18, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 17, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 16, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 0.5
LearningAgent.update(): deadline = 15, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 14, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 13, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = left, reward = 2
LearningAgent.update(): deadline = 12, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 11, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 10, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (6, 4), destination = (1, 1), deadline = 40
RoutePlanner.route_to(): destination = (1, 1)
LearningAgent.update(): deadline = 40, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 39, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 38, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 37, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 36, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 35, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 34, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 33, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 32, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 31, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 30, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 29, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 28, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', 'forward')], action = forward, reward = 2
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 27, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (8, 5), destination = (4, 3), deadline = 30
RoutePlanner.route_to(): destination = (4, 3)
LearningAgent.update(): deadline = 30, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 29, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 28, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 27, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 26, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 25, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 24, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 23, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 22, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 21, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 20, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 19, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 18, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (1, 4), destination = (4, 6), deadline = 25
RoutePlanner.route_to(): destination = (4, 6)
LearningAgent.update(): deadline = 25, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 24, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', 'left')], action = left, reward = -1
LearningAgent.update(): deadline = 23, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 22, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 21, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 20, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 19, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 18, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 17, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 16, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 15, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = -1
LearningAgent.update(): deadline = 14, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 13, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (7, 4), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
LearningAgent.update(): deadline = 20, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = right, reward = 2
LearningAgent.update(): deadline = 19, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 18, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 17, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 16, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 15, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 2
LearningAgent.update(): deadline = 14, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
LearningAgent.update(): deadline = 13, inputs = [('light', 'red'), ('oncoming', None), ('right', None), ('left', None)], action = None, reward = 1
Environment.act(): Primary agent has reached destination!
LearningAgent.update(): deadline = 12, inputs = [('light', 'green'), ('oncoming', None), ('right', None), ('left', None)], action = forward, reward = 12
(myenv) Philips-Air:p4-smartcab pgura$ 
